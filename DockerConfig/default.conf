server {
    access_log /dev/stdout;
    listen       80;
    server_name  localhost;
    client_max_body_size 2G;

    location /uploads {
        auth_request /auth;
        alias   /uploads;
    }
    
    location /auth {
        internal;
        proxy_pass http://flask/auth;
        proxy_pass_request_body off;
        proxy_set_header        Content-Length "";
        proxy_set_header        X-Original-URI $request_uri;
    }

    location /static {
        alias   /static;
    }

    location / {
       proxy_http_version 1.1;

       proxy_set_header X-FORWARDED-FOR $remote_addr;
       proxy_set_header Upgrade $http_upgrade;
       proxy_set_header Connection "Upgrade"; 
       proxy_set_header Host $host;
       proxy_set_header Connection "";
       proxy_redirect off;
       proxy_read_timeout 300;

       proxy_pass http://flask;
    }



    # internal sets this location to only deliver it to clients that are behind
    # the nginx and do have the X-ACCEL header set corresponding
    location /documents {
      internal;
      alias /documents;
    }
    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

upstream flask {
    server flask:5000;
}

